//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Sheets.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="SheetsParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ISheetsVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>IncrementExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrementExpr([NotNull] SheetsParser.IncrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PowerExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPowerExpr([NotNull] SheetsParser.PowerExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MultiplyExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplyExpr([NotNull] SheetsParser.MultiplyExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CellExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCellExpr([NotNull] SheetsParser.CellExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NumberExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberExpr([NotNull] SheetsParser.NumberExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddExpr([NotNull] SheetsParser.AddExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SubtractExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubtractExpr([NotNull] SheetsParser.SubtractExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExpr([NotNull] SheetsParser.ParenExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DecrementExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecrementExpr([NotNull] SheetsParser.DecrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NegateExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegateExpr([NotNull] SheetsParser.NegateExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DivideExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivideExpr([NotNull] SheetsParser.DivideExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SheetsParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] SheetsParser.NumberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SheetsParser.cell"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCell([NotNull] SheetsParser.CellContext context);
}
