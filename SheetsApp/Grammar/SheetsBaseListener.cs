//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Sheets.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISheetsListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SheetsBaseListener : ISheetsListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>IncrementExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncrementExpr([NotNull] SheetsParser.IncrementExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IncrementExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncrementExpr([NotNull] SheetsParser.IncrementExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PowerExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPowerExpr([NotNull] SheetsParser.PowerExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PowerExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPowerExpr([NotNull] SheetsParser.PowerExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MultiplyExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplyExpr([NotNull] SheetsParser.MultiplyExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MultiplyExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplyExpr([NotNull] SheetsParser.MultiplyExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CellExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCellExpr([NotNull] SheetsParser.CellExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CellExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCellExpr([NotNull] SheetsParser.CellExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberExpr([NotNull] SheetsParser.NumberExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberExpr([NotNull] SheetsParser.NumberExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddExpr([NotNull] SheetsParser.AddExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AddExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddExpr([NotNull] SheetsParser.AddExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SubtractExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubtractExpr([NotNull] SheetsParser.SubtractExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SubtractExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubtractExpr([NotNull] SheetsParser.SubtractExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenExpr([NotNull] SheetsParser.ParenExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenExpr([NotNull] SheetsParser.ParenExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DecrementExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecrementExpr([NotNull] SheetsParser.DecrementExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DecrementExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecrementExpr([NotNull] SheetsParser.DecrementExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NegateExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegateExpr([NotNull] SheetsParser.NegateExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NegateExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegateExpr([NotNull] SheetsParser.NegateExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DivideExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivideExpr([NotNull] SheetsParser.DivideExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DivideExpr</c>
	/// labeled alternative in <see cref="SheetsParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivideExpr([NotNull] SheetsParser.DivideExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SheetsParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] SheetsParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SheetsParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] SheetsParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SheetsParser.cell"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCell([NotNull] SheetsParser.CellContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SheetsParser.cell"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCell([NotNull] SheetsParser.CellContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
